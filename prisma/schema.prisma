// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Feeds {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  title      String?
  message    String
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  contents   String[]
  comments   Comments @relation(fields: [commentsId], references: [id])
  commentsId String   @db.ObjectId
  likes      Likes    @relation(fields: [likesId], references: [id])
  likesId    String   @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  deletedAt  DateTime
}

model User {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  image    String
  Feeds    Feeds[]
  Comments Comments[]
}

model Comments {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  message  String
  user     User    @relation(fields: [userId], references: [id])
  userId   String  @db.ObjectId
  fatherId String?
  Feeds    Feeds[]
  feedsId  String? @db.ObjectId
  likes    Likes   @relation(fields: [likesId], references: [id])
  likesId  String  @db.ObjectId
}

model Likes {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  image    String
  Comments Comments[]
  Feeds    Feeds[]
}

model Destiny {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  to        String
  companies String[]
  services  String[]
  groups    String[]
}
